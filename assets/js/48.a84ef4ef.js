(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{336:function(v,_,t){"use strict";t.r(_);var i=t(13),l=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"性能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[v._v("#")]),v._v(" 性能")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("https://www.bilibili.com/video/BV1yy4y1i7o1?p=2")])]),v._v(" "),_("li",[_("p",[v._v("降低请求量：")]),v._v(" "),_("ul",[_("li",[v._v("合并资源，减少 HTTP 请求数，")]),v._v(" "),_("li",[v._v("minify / gzip 压缩，webP，lazyLoad。")])])]),v._v(" "),_("li",[_("p",[v._v("加快请求速度：")]),v._v(" "),_("ul",[_("li",[v._v("预解析 DNS，减少域名数，并行加载，CDN 分发。")])])]),v._v(" "),_("li",[_("p",[v._v("缓存：")]),v._v(" "),_("ul",[_("li",[v._v("HTTP 协议缓存请求，")]),v._v(" "),_("li",[v._v("离线缓存 manifest，")]),v._v(" "),_("li",[v._v("离线数据缓存localStorage。")])])]),v._v(" "),_("li",[_("p",[v._v("渲染：")]),v._v(" "),_("ul",[_("li",[v._v("JS/CSS 优化，加载顺序，服务端渲染，pipeline")])])])]),v._v(" "),_("h2",{attrs:{id:"缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[v._v("#")]),v._v(" 缓存")]),v._v(" "),_("ul",[_("li",[v._v("强缓存\n"),_("ul",[_("li",[v._v("相关字段有 expires，cache-control。")]),v._v(" "),_("li",[v._v("如果 cache-control 与expires 同时存在的话， cache-control 的优先级高于 expires。")])])]),v._v(" "),_("li",[v._v("协 商 缓 存\n"),_("ul",[_("li",[v._v("相 关 字 段 有 Last-Modified/If-Modified-Since ，Etag/If-None-Match")])])])]),v._v(" "),_("h2",{attrs:{id:"浏览器输入网址到页面渲染的全过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入网址到页面渲染的全过程"}},[v._v("#")]),v._v(" 浏览器输入网址到页面渲染的全过程")]),v._v(" "),_("ul",[_("li",[v._v("根据网址通过DNS找到ip")]),v._v(" "),_("li",[v._v("建立tcp/IP连接")]),v._v(" "),_("li",[v._v("发送http请求")]),v._v(" "),_("li",[v._v("服务器处理请求并返回http报文")]),v._v(" "),_("li",[v._v("浏览器解析并渲染页面")])]),v._v(" "),_("h2",{attrs:{id:"回流-重绘"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#回流-重绘"}},[v._v("#")]),v._v(" 回流/重绘")]),v._v(" "),_("ul",[_("li",[v._v("回流: 当 render tree 中的一部分或者全部因为元素的规模尺寸，布局，隐藏等改变而需要重新构建")]),v._v(" "),_("li",[v._v("重绘: 当 render tree 中的一些元素需要更新属性，而这些属性只是影响元素的外观，不会影响布局")])]),v._v(" "),_("h2",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[v._v("#")]),v._v(" http")]),v._v(" "),_("blockquote",[_("p",[v._v("超文本传输协议")])]),v._v(" "),_("p",[_("strong",[v._v("特点")])]),v._v(" "),_("ul",[_("li",[v._v("无状态")]),v._v(" "),_("li",[v._v("基于请求-响应模式")])]),v._v(" "),_("h2",{attrs:{id:"内存泄漏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[v._v("#")]),v._v(" 内存泄漏")]),v._v(" "),_("blockquote",[_("p",[v._v("JavaScript 内存泄露指对象在不需要使用它时仍然存在，导致占用的内存不能使用或回收")])]),v._v(" "),_("h3",{attrs:{id:"可能情况"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可能情况"}},[v._v("#")]),v._v(" 可能情况")]),v._v(" "),_("ul",[_("li",[v._v("未使用 var 声明的全局变量")]),v._v(" "),_("li",[v._v("闭包函数(Closures)")]),v._v(" "),_("li",[v._v("循环引用(两个对象相互引用)")]),v._v(" "),_("li",[v._v("控制台日志(console.log)")]),v._v(" "),_("li",[v._v("移除存在绑定事件的DOM元素(IE)")]),v._v(" "),_("li",[v._v("setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏")]),v._v(" "),_("li",[v._v("垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收")])])])}),[],!1,null,null,null);_.default=l.exports}}]);