(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{333:function(t,v,_){"use strict";_.r(v);var l=_(13),a=Object(l.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),v("ul",[v("li",[t._v("降低请求量：\n"),v("ul",[v("li",[t._v("合并资源，减少 HTTP 请求数，")]),t._v(" "),v("li",[t._v("minify / gzip 压缩，webP，lazyLoad。")])])]),t._v(" "),v("li",[t._v("加快请求速度：\n"),v("ul",[v("li",[t._v("预解析 DNS，减少域名数，并行加载，CDN 分发。")])])]),t._v(" "),v("li",[t._v("缓存：\n"),v("ul",[v("li",[t._v("HTTP 协议缓存请求，")]),t._v(" "),v("li",[t._v("离线缓存 manifest，")]),t._v(" "),v("li",[t._v("离线数据缓存localStorage。")])])]),t._v(" "),v("li",[t._v("渲染：\n"),v("ul",[v("li",[t._v("JS/CSS 优化，加载顺序，服务端渲染，pipeline")])])])]),t._v(" "),v("h2",{attrs:{id:"缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),v("ul",[v("li",[t._v("强缓存\n"),v("ul",[v("li",[t._v("相关字段有 expires，cache-control。")]),t._v(" "),v("li",[t._v("如果 cache-control 与expires 同时存在的话， cache-control 的优先级高于 expires。")])])]),t._v(" "),v("li",[t._v("协 商 缓 存\n"),v("ul",[v("li",[t._v("相 关 字 段 有 Last-Modified/If-Modified-Since ，Etag/If-None-Match")])])])]),t._v(" "),v("h2",{attrs:{id:"浏览器输入网址到页面渲染的全过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入网址到页面渲染的全过程"}},[t._v("#")]),t._v(" 浏览器输入网址到页面渲染的全过程")]),t._v(" "),v("ul",[v("li",[t._v("根据网址通过DNS找到ip")]),t._v(" "),v("li",[t._v("建立tcp/IP连接")]),t._v(" "),v("li",[t._v("发送http请求")]),t._v(" "),v("li",[t._v("服务器处理请求并返回http报文")]),t._v(" "),v("li",[t._v("浏览器解析并渲染页面")])]),t._v(" "),v("h2",{attrs:{id:"回流-重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#回流-重绘"}},[t._v("#")]),t._v(" 回流/重绘")]),t._v(" "),v("ul",[v("li",[t._v("回流: 当 render tree 中的一部分或者全部因为元素的规模尺寸，布局，隐藏等改变而需要重新构建")]),t._v(" "),v("li",[t._v("重绘: 当 render tree 中的一些元素需要更新属性，而这些属性只是影响元素的外观，不会影响布局")])]),t._v(" "),v("h2",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" http")]),t._v(" "),v("blockquote",[v("p",[t._v("超文本传输协议")])]),t._v(" "),v("p",[v("strong",[t._v("特点")])]),t._v(" "),v("ul",[v("li",[t._v("无状态")]),t._v(" "),v("li",[t._v("基于请求-响应模式")])]),t._v(" "),v("h2",{attrs:{id:"内存泄漏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),v("blockquote",[v("p",[t._v("JavaScript 内存泄露指对象在不需要使用它时仍然存在，导致占用的内存不能使用或回收")])]),t._v(" "),v("h3",{attrs:{id:"可能情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可能情况"}},[t._v("#")]),t._v(" 可能情况")]),t._v(" "),v("ul",[v("li",[t._v("未使用 var 声明的全局变量")]),t._v(" "),v("li",[t._v("闭包函数(Closures)")]),t._v(" "),v("li",[t._v("循环引用(两个对象相互引用)")]),t._v(" "),v("li",[t._v("控制台日志(console.log)")]),t._v(" "),v("li",[t._v("移除存在绑定事件的DOM元素(IE)")]),t._v(" "),v("li",[t._v("setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏")]),t._v(" "),v("li",[t._v("垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收")])])])}),[],!1,null,null,null);v.default=a.exports}}]);